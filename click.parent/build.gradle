def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")
def vendorName = "greetgo!"

allprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'maven'
  apply plugin: 'idea'

  version = '1.0.0'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  group = "kz.greetgo.click"

  eclipse.project.natures 'org.springsource.ide.eclipse.gradle.core.nature'
  compileJava.options.debugOptions.debugLevel = "source,lines,vars"
  compileJava.options.encoding = "UTF-8"
  compileTestJava.options.debugOptions.debugLevel = "source,lines,vars"
  compileTestJava.options.encoding = "UTF-8"

}

subprojects {

  project.eclipse.classpath.file.whenMerged { cp ->
    if (project.hasProperty("sourceCompatibility")) {
      cp.entries.findAll { it.path.contains('JRE_CONTAINER') }.each {
        it.path += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/" +
          "JavaSE-$project.sourceCompatibility"
      }
    }
  }

  repositories {
    mavenLocal()
    maven { url System.getenv('GG_REPO') }
    mavenCentral()
  }

  dependencies {
    ext.guavaVersion = '19.0'
    ext.depinjectVersion = '0.1.9'

    testCompile 'org.testng:testng:6.5.1'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'

    compile 'com.google.code.findbugs:annotations:2.0.1'
    compile 'com.google.firebase:firebase-core:10.0.0'

  }

  jar {
    manifest {
      attributes 'Implementation-Title': project.name, 'Implementation-Version': version,
        'Implementation-Vendor': vendorName, 'Built-By': System.getProperty("user.name"), 'Built-At': nowFormattedDate
    }
  }

  sourceSets {
    main {
      java.srcDirs = ["src"]
      resources.srcDirs = ["src", "src_resources"]
      output.resourcesDir = "build/classes/main"
    }
    test {
      java.srcDirs = ["test_src"]
      resources.srcDirs = ["test_src", "test_resources"]
      output.resourcesDir = "build/classes/test"
    }
  }

  //noinspection GroovyMissingReturnStatement
  test { useTestNG() }
}
